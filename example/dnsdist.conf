

-- view "_default"

newServer({address="127.0.0.1:40000", pool="auth__default"})
newServer({address="127.0.0.1:40001", pool="resolver__default"})
pc = newPacketCache(100000)
getPool("resolver__default"):setCache(pc)

match_clients__default = newNMG()
match_clients__default:addMask("0.0.0.0/0")
match_clients__default:addMask("::0/0")
match_destinations__default = newNMG()
match_destinations__default:addMask("0.0.0.0/0")
match_destinations__default:addMask("::0/0")
allow_query__default = newNMG()
allow_query__default:addMask("0.0.0.0/0")
allow_query__default:addMask("::0/0")
allow_recursion__default = newNMG()
allow_recursion__default:addMask("10.0.0.0/8")
allow_recursion__default:addMask("192.168.0.0/16")
allow_recursion__default:addMask("192.0.2.1")
allow_recursion__default:addMask("127.0.0.1")
allow_recursion__default:addMask("2001:8db::/32")
allow_recursion__default:addMask("::1")
allow_recursion__default:addMask("2001:8db:1:3:1:2:3:4")
authdomains__default = newSuffixMatchNode()
allow_transfer__default = {}
authdomains__default:add(newDNSName("example.com."))
allow_transfer__default["example.com."] = newNMG()
allow_transfer__default["example.com."]:addMask("10.0.0.0/8")
allow_transfer__default["example.com."]:addMask("192.168.0.0/16")
allow_transfer__default["example.com."]:addMask("192.0.2.1")
allow_transfer__default["example.com."]:addMask("127.0.0.1")
authdomains__default:add(newDNSName("example.jp."))
allow_transfer__default["example.jp."] = newNMG()


function xfr_query__default(dq)
        if(dq.qtype == dnsdist.AXFR or dq.qtype == dnsdist.IXFR)
        then
                a = allow_transfer__default[string.lower(dq.qname:toString())]
                if(match_clients__default:match(dq.remoteaddr) and a:match(dq.remoteaddr))
                then
                	return DNSAction.Pool, "auth__default"
		end
        end
        return DNSAction.None, ""
end

addAction(AndRule({NotRule(NetmaskGroupRule(allow_query__default))}), RCodeAction(5))
addAction(AndRule({NotRule(QTypeRule(dnsdist.AXFR)), NotRule(QTypeRule(dnsdist.IXFR)), SuffixMatchNodeRule(authdomains__default)}), PoolAction("auth__default"))
addAction(AndRule({NotRule(QTypeRule(dnsdist.AXFR)), NotRule(QTypeRule(dnsdist.IXFR)), NetmaskGroupRule(match_clients__default)}), PoolAction("resolver__default"))
addLuaAction(".", xfr_query__default)
addAction(AllRule(), RCodeAction(5))

setACL({})
addACL("0.0.0.0/0")
addACL("::0/0")
controlSocket("127.0.0.1")

addLocal("0.0.0.0:53")
addLocal("[::]:53")
